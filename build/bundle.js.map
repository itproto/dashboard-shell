{"version":3,"sources":["webpack:///webpack/bootstrap 13cce9c227159abbfc9a","webpack:///./src/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtCA,SAAQ,IAAR,CAAa,kBAAb;;AAEA,KAAM,UAAU,SAAV,OAAU,CAAC,OAAD,EAAa;AAC3B,UAAO,MAAP,WAAsB,OAAtB,UAAoC,IAApC,CACI,UAAC,GAAD,EAAS;AACP,SAAI,MAAM,GAAV;AACA,SAAI,GAAJ;AACA,aAAQ,IAAR,CAAa,GAAb;AACD,IALL,EAOI,UAAC,GAAD,EAAS;AACP,aAAQ,KAAR,CAAc,GAAd;AACD,IATL;AAWD,EAZD;;AAcA,KAAM,YAAY,SAAZ,SAAY,GAAM;AACrB,YAAS,aAAT,CAAuB,OAAvB,EAAgC,gBAAhC,CAAiD,OAAjD,EAA0D,UAAC,GAAD,EAAS;AAChE,SAAG,IAAI,MAAJ,CAAW,OAAX,KAAuB,GAA1B,EAA8B;AAC5B;AACD;;AAED,SAAI,cAAJ;AACA,SAAM,UAAU,IAAI,MAAJ,CAAW,YAAX,CAAwB,MAAxB,EAAgC,KAAhC,CAAsC,CAAtC,CAAhB;;AAEA,aAAQ,OAAR;AACF,IATD;AAUF,EAXD;;AAaA,UAAS,gBAAT,CAA0B,kBAA1B,EAA8C,SAA9C,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 13cce9c227159abbfc9a\n **/","console.info('shell is loading');\n\nconst loadApp = (appName) => {\n  System.import(`apps/${appName}.js`).then(\n      (res) => {\n        let mod = res;\n        mod.inc()\n        console.info(res)\n      },\n\n      (err) => {\n        console.error(err)\n      }\n  )\n}\n\nconst bootShell = () => {\n   document.querySelector('#apps').addEventListener('click', (evt) => {\n      if(evt.target.tagName !== 'A'){\n        return;\n      }\n      \n      evt.preventDefault()\n      const appName = evt.target.getAttribute('href').slice(1)\n\n      loadApp(appName)\n   })\n}\n\ndocument.addEventListener('DOMContentLoaded', bootShell)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":""}